The regular expressions used by the command line compiler are shown
below. This content is printed on the screen with the built-in
function `LEXEM`.

To describe the regular expression the following character classes are
used:

* :print:  - all printable characters
* :space:  - all blanks, tabs and new lines
* :cntr:   - all control characters
* :alpha:  - all letters ([[a-z]|[A-Z]])
* :alnum:  - all letters and digits [0-9]
* :digit:  - all decimal numbers [0-9]
* :xdigit: - all hexadecimal numbers [[0-9]|[a-f||[A-F]]

All comments and separators are ignored by the scanner and not passed
with the token to the parser. This means that the separators (SEP)
are used in the grammar but will never be part of or own tokens.

If a binary entry for a string is possible and no classification is
done it is taken as a binary string in local character set 
representation (c) without null termination. This default can be
changed. In this case the help message for this argument should be
described the default interpretation of the binary string. For binary
strings it is still possible to enter a null-terminated string, but
then the prefix *s* must be used. If no binary entry is feasible, only
a null-terminated string in local character representation (s) can be
built and taken by default.
